* This file has scripts for:
*1 5 50200 - World Wrap Camera
*1 6 50200 - World Wrap Grabber
*1 7 50200 - Mouse Pointer Tracker
*1 7 20201 - Window Resize Camera Builder
*1 7 50202 - World Wrap Mirror Object



*todo: possibly improve speech bubble grabbing? might be able to check if Aiko's Speech Bubbles Upgrade 1.2 is installed which stores which agent created the bubble as an enhancement.


*NeoDement:
*-General cleanup
*-We are now ENUMing over all objects (0 0 0) instead of just objects in family 2 (2 0 0). This means creatures now transport properly through the wrap.
*-The world wrap now handles hand holding properly.
*-Creatures can hear Hand and Agent Help speech over wrap.
*-Objects and the pointer will no longer transport if they have a creatures attention on them. Left or right click immediately overrides this for the pointer.

*Neo's Notes:

*Objects with attention on them not transporting could probably be optimized instead of looping over all creatures once per grabber.
*There may also need to be some sort of fail safe if objects move too far past the wrap... but this seems fine in tests so far
*caveat: you can't pick up an object that has passed through the wrap if a norn hasn't stopped looking at it yet. hopefully this is rare enough to be okay.
*we also can't hand hold or shift right click creatures on the other side of the wrap if a norn is looking at them.
*fortunately creatures tend to shift their focus often.
*todo?: we could detect right clicks and do an offset trick to see if anything is TOUCing the PNTR and if it is then teleport them back where they're meant to be?




*CA links for the "wrap" rooms.*

*Atmosphere

link grap 2070 47640 grap 10375 47640 100

*Desert Beach

link grap 2070 48090 grap 10375 48090 100

*Biome 1

link grap 2070 48340 grap 10375 48340 100

*Bome 2

link grap 2070 48822 grap 10375 48822 100

*Machines to Volcano

link grap 2070 49340 grap 10375 49340 100

*----------------------*

*Yggdrasil to Desert

link grap 12950 47678 grap 4890 48110 100



*Set the game variables for easy reference.*

setv game "C2toDS_Top" 47600

*unused
*setv game "C2toDS_Bottom" 49999

*unused
*setv game "C2toDS_Left" 0

setv game "C2toDS_Right" 12448

setv game "C2toDS_RoomID" gmap 6753 48383

setv game "C2toDS_WrapLeft" 2047

setv game "C2toDS_WrapRight" 10399

*A value between WrapLeft and WrapRight

setv game "C2toDS_WrapMiddle" 6223

* Wrap padding determines how many panels are pushed back onto the actual non-wrapped part of the world
setv game "C2toDS_WrapPadding" 1

* Wrap Offset - how many pixels to add or remove from an X coordinate to get its wrapped equivalent?
setv game "C2toDS_WrapOffset" 8352



*--//--References---*

*10399 is the point of wrap on the RIGHT side of the map.*

*2048 is the point of wrap on the LEFT side of the map.*

*--//---------------*




*Set up camera heights and widths for easy change.*

*They are 400 wide, 300 high.  This helps for 800x600 displays, the minimum size for Creatures.*

setv game "C2toDS_CamWidth" 400

setv game "C2toDS_CamHeight" 300

*----------------------------------------------------------------------------------*


*mouse pointer tracker

new: simp 1 7 50200 "blank" 1 0 1

attr 0

accg 0

tick 1

fric 100

aero 0

*listen for Raw Key Down (1) + Raw Mouse Down (8) + Raw Mouse Up (16). We use them to intercept speech, agent help clicks and mouse clicks over the wrap.
imsk 25


*----------------------------------*

* Window resize watcher/ camera builder

new: simp 1 7 20201 "blnk" 1 0 0

attr 16

* Delay init or right side panels will not be created properly

tick 40


*----------------------------------*


*-Inject the Cameras and Wrap Pieces-*

scrp 1 7 20201 123
	tick 80
endm


scrp 1 7 20201 9

	inst

	lock

	doif wndw eq name "CamWidth::last"

		tick 0

		unlk

*		stop

	endi

	setv name "CamWidth::last" wndw

* Kill existing wrap cameras and grabbers

	enum 1 5 50200
		kill targ
	next

	enum 1 6 50200
		kill targ
	next

*Calculate panels wide

	setv va00 wndw

	setv va11 va00

	divv va11 game "C2toDS_CamWidth"

	addv va11 game "C2toDS_WrapPadding"

	setv va12 va00

	modv va12 game "C2toDS_CamWidth"

	doif va12 gt 0

		addv va11 1

	endi


*Begin counter for injecting Cameras*

	setv va03 0

*Set first Y

	setv va04 game "C2toDS_Top"

	subv va04 299

*Set first X Left

	setv va22 game "C2toDS_WrapLeft"

	addv va22 game "C2toDS_CamWidth"

	subv va22 va00

*Set first X Right

	setv va23 game "C2toDS_WrapRight"

	setv va15 100

	loop

		addv va04 299

		addv va03 1

*Offset the wrap onto the non-wrapped part of the world

		setv va10 game "C2toDS_WrapPadding"

		negv va10

		reps va11


*left side to show right side

*Calculate left side camera x-position

			setv va12 va10

			mulv va12 game "C2toDS_CamWidth"

			addv va12 va22

			setv va14 game "C2toDS_CamWidth"

			doif va12 lt 0

				addv va14 va12

*Ensure that camera has width and can be placed at zero

				doif va14 gt 20

					setv va12 0

				endi

			endi

*Calculate left side camera view x-position

			setv va13 va12

			addv va13 game "C2toDS_WrapOffset"


*Make sure left side camera is in bounds

			doif va12 >= 0

*create world wrap camera
				new: comp 1 5 50200 "moe_C2toDS_camera" 1 1 1

				pat: cmra 1 "moe_C2toDS_camera" 1 0 0 0 va14 game "C2toDS_CamHeight" va14 game "C2toDS_CamHeight"

				attr 0

				accg 0

				fric 100

				aero 0

				mvto va12 va04

				scam targ 1

				cmra va13 va04 0

				setv ov00 va13

				setv ov04 va04

				tick 100

			endi


*Left Side Grabber

			new: simp 1 6 50200 "moe_C2toDS_Camera" 1 1 1

			attr 0

			accg 0

			tick 10

			fric 100

			aero 0

*			rnge 1000

			mvto va12 va04

*I Am on the right of the world, in the 10000 range*

			sets name "WhichWrapPieceAmI?" "Left"



*right side to show left side

*Calculate right side camera agent x

			setv va12 va10

			mulv va12 game "C2toDS_CamWidth"

			addv va12 va23

*Calculate camera position focus x

			setv va13 va12

			subv va13 game "C2toDS_WrapOffset"

*Make sure camera is still in bounds

			setv va14 va12

			addv va14 game "C2toDS_CamWidth"

			doif va14 gt game "C2toDS_Right"

				setv va15 va14

				subv va15 game "C2toDS_Right"

			else

				setv va15 game "C2toDS_CamWidth"

			endi

			setv va14 va12

			addv va14 va15


			doif va15 gt 20 and va14 le game "C2toDS_Right"

				new: comp 1 5 50200 "moe_C2toDS_camera" 1 1 1

				pat: cmra 1 "moe_C2toDS_camera" 1 0 0 0 va15 game "C2toDS_CamHeight" va15 game "C2toDS_CamHeight"

				attr 0

				accg 0

				fric 100

				aero 0

				mvto va12 va04

				scam targ 1

				cmra va13 va04 0

				setv ov00 va13

				setv ov04 va04

				tick 100

			endi

*----------*

*Right Side Grabber

			new: simp 1 6 50200 "moe_C2toDS_Camera" 1 1 1

			attr 0

			accg 0

			tick 10

			fric 100

			aero 0

*			rnge 1000

			mvto va12 va04

			sets name "WhichWrapPieceAmI?" "Right"

*Increment X-wide

			addv va10 1

		repe

	untl va03 eq 8

**debug: no cameras
*	enum 1 5 50200
*		kill targ
*	next

	unlk

endm



*----END INJECT CAMERAS AND WRAP PIECES----*



*This might be the cause of a mild performance hit, but it keeps the cameras from blacking out.*

*World Wrap Camera - Timer Script

scrp 1 5 50200 9

	tick 1000

	scam targ 1

	cmra ov00 ov04 0

endm



* World Wrap Camera - World Loaded script

*This might be the cause of a mild performance hit, but it keeps the cameras from blacking out.*

scrp 1 5 50200 128

	scam targ 1

	cmra ov00 ov04 0

endm



** World Wrap Grabber - Exception Script
*(this ended up causing more problems than it solved)
*
*scrp 1 6 50200 255
*	stpc
*endm




* World Wrap Grabber - Timer script (runs once every 10 ticks)

scrp 1 6 50200 9

*stop

*	lock

	inst



*todo: it would be nicer if we only did this once per 10 ticks instead of once for every grabber

*we are using IITT instead of _IT_
*IITT - Returns the target creature's current agent of attention. 
*_IT_ - Returns the agent OWNR's attention was on when the current script was entered. 

*start variable numbering at "0"
	setv va30 0

*loop through all creatures
*	esee 4 0 0
	enum 4 0 0
		seta va32 iitt
*		seta va32 _it_
		targ ownr
*set variabled named "0", "1", "2" etc to current creatures agent of attention
		seta name va30 va32

*add 1 to variable name
		addv va30 1
	next

*set OV99 to amount of IITTs stored this tick
	setv ov99 va30




	doif name "WhichWrapPieceAmI?" eq "Right"

*loop over all agents touching this grabber
		etch 0 0 0

*if the target has attribute Suffer Physics, is Autonomous and is over the Right hand side of the wrap
			doif attr ge 64 and movs eq 0 and posx gt game "C2toDS_WrapRight"



*CHECK IF THE TARGET AGENT IS ANY CREATURES AGENT OF ATTENTION:


*store the agent in va99 so we can switch back to it after the _IT_ check
				seta va99 targ

*go through all the IITTS stored this tick:
				setv va30 0

				targ ownr

				doif ov99 > 0
					reps ov99


*fix for IITT sometimes being set to 0 (possibly if creature has no agent of attention?)
						doif type name va30 = 0
							seta name va30 null
*							dbg: outv va30
						endi

*if any of the IITTs you stored are the same agent as the agent that is touching the world wrap
						doif name va30 eq va99

*set a note to stop the script when done cleaning up the temp variables
							setv va31 1
*forget stored agent
							setv name va30 0
						endi

						addv va30 1

					repe
				endi

*you are a creatures agent of attention, stop!
				doif va31 eq 1
					targ ownr
					stop
				endi

				targ va99



*check if the target agent is being tracked for camera reasons
				doif targ eq trck

*remember current camera coordinates before we jump
					setv va02 cmrx
					setv va03 cmry
*offset them to the other side of the world
					subv va02 game "C2toDS_WrapOffset"

				endi



*if the target is an object
				doif crea targ ne 1

					setv va00 posl
					setv va01 post

					addv va01 1

					subv va00 game "C2toDS_WrapOffset"

*move the object to the other side of the wrap

*do an unsafe move if possible
					doif tmvt va00 va01 = 1
						mvto va00 va01
					else
						mvsf va00 va01
					endi

*if the target is a creature
				else

					setv va00 dftx
					setv va01 dfty

					addv va01 1

					subv va00 game "C2toDS_WrapOffset"


*move the creature to the other side of the wrap
*(do an unsafe move if possible)
					doif tmvf va00 va01 = 1
						mvft va00 va01
					else
						mvsf va00 va01
					endi

*if we have stored some camera coordinates to jump to (and they're not out of bounds)
					doif va02 > 0 and va03 > 0 and game "C2toDS_RoomID" = gmap va02 va03

						wait 0

*move camera to equivalent coordinate on other side of world
*(the automatic camera reposition is offset as if you dragged the creature to the far edge of the window)
						cmrp va02 va03 0

					endi

				endi

			endi
		next

	elif name "WhichWrapPieceAmI?" eq "Left"

*loop over all agents touching this grabber
		etch 0 0 0

*if the target has attribute Suffer Physics, is Autonomous and is over the Left hand side of the wrap
			doif attr ge 64 and movs eq 0 and posx lt game "C2toDS_WrapLeft"




*CHECK IF THE TARGET AGENT IS ANY CREATURES AGENT OF ATTENTION:


*store the agent in va99 so we can switch back to it after the _IT_ check
				seta va99 targ

*go through all the IITTS stored this tick:
				setv va30 0

				targ ownr

				doif ov99 > 0
					reps ov99


*fix for IITT sometimes being set to 0 (possibly if creature has no agent of attention?)
						doif type name va30 = 0
							seta name va30 null
*							dbg: outv va30
						endi

*if any of the IITTs you stored are the same agent as the agent that is touching the world wrap
						doif name va30 eq va99

*set a note to stop the script when done cleaning up the temp variables
							setv va31 1
*forget stored agent
							setv name va30 0
						endi

						addv va30 1

					repe
				endi

*you are a creatures agent of attention, stop!
				doif va31 eq 1
					targ ownr
					stop
				endi

				targ va99





*check if the target agent is being tracked for camera reasons
				doif targ eq trck

*remember current camera coordinates before we jump
					setv va02 cmrx
					setv va03 cmry
*offset them to the other side of the world
					addv va02 game "C2toDS_WrapOffset"

				endi





*if the target is an object
				doif crea targ ne 1

					setv va00 posl
					setv va01 post

					addv va01 1

					addv va00 game "C2toDS_WrapOffset"

*move the object to the other side of the wrap

*do an unsafe move if possible
					doif tmvt va00 va01 = 1
						mvto va00 va01
					else
						mvsf va00 va01
					endi

*if the target is a creature
				else

					setv va00 dftx
					setv va01 dfty

					addv va01 1

					addv va00 game "C2toDS_WrapOffset"




*move the creature to the other side of the wrap
*(do an unsafe move if possible)
					doif tmvf va00 va01 = 1
						mvft va00 va01
					else
						mvsf va00 va01
					endi

*if we have stored some camera coordinates to jump to (and they're not out of bounds)
					doif va02 > 0 and va03 > 0 and game "C2toDS_RoomID" = gmap va02 va03

						wait 0

*move camera to equivalent coordinate on other side of world
*(the automatic camera reposition is offset as if you dragged the creature to the far edge of the window)
						cmrp va02 va03 0

					endi

				endi

			endi

		next

	endi

endm


*Pointer Tracker - Timer Script, runs once per tick*

scrp 1 7 50200 9

*stop

	inst

*grab the pointer so we can check where it is
	targ pntr

*remember the pointer coords
	setv va00 posl
	setv va01 post

	doif game "C2toDS_RoomID" = gmap va00 va01

*if it's too far off the left side, we need to wrap the camera round to the right
		doif va00 <= game "C2toDS_WrapLeft"



*don't transport the pointer if a creature is paying attention to it. if OV01/MV01 is set to 1 then we transport it anyway.
			enum 4 0 0
				doif pntr = iitt and mv01 = 0
*						sezz "had attention on it"
					stop
*					else
*						sezz "no attention"
				endi
			next



*don't automatically move the camera if we're holding a creatures hand, let the World Wrap Grabber timer script handle it
			targ hhld
			doif crea targ ne 1

				scam null 0

				setv va04 wndl

				addv va04 game "C2toDS_WrapOffset"

				setv va05 wndt

				doif gmap va04 va05 <> -1

					cmra va04 va05 0

				endi

			endi

		endi


*if it's too far off the right side, we need to wrap the camera round to the left
		doif va00 >= game "C2toDS_WrapRight"



*don't transport the pointer if a creature is paying attention to it. if OV01/MV01 is set to 1 then we transport it anyway.
			enum 4 0 0
				doif pntr = iitt and mv01 = 0
*						sezz "had attention on it"
					stop
*					else
*						sezz "no attention"
				endi
			next



*don't automatically move the camera if we're holding a creatures hand, let the World Wrap Grabber timer script handle it
			targ hhld
			doif crea targ ne 1

				scam null 0

				setv va04 wndl

				subv va04 game "C2toDS_WrapOffset"

				setv va05 wndt

				doif gmap va04 va05 <> -1

					cmra va04 va05 0

				endi

			endi

		endi

	endi

endm





*Pointer Tracker - Raw Mouse Down script
*This copies the effect of agent help bubbles over the world wrap.

scrp 1 7 50200 76

	inst


*any sort of click immediately sends the pointer over the wrap if a creatures attention is currently preventing it from moving
	setv mv01 1


* left mouse - shout your name
	doif _p1_ = 1

*check if "agent help watcher" IMSK is set to 9. If it is, that means agent help mode is active.
		rtar 1 2 4
		doif imsk <> 9
			stop
		endi

		seta va05 hots
		doif va05 <> null


			targ va05


*store XY coords for later
			setv va00 posl
			setv va01 post

*fake temp object needs to have the same category as the real one
			setv va50 cata
*and also the same visibility setting according to attr
			setv va51 attr


*stop the script if we're not in the C2toDS metaroom
			doif game "C2toDS_RoomID" <> gmap va00 va01
				stop
			endi

*		set up string with name of object
			setv va98 cata
			sets va99 catx va98

* icons gui
			doif fmly eq 1 and gnus eq 2 and spcs eq 14
				stop
* agent help box
			elif fmly eq 1 and gnus eq 2 and spcs eq 5
				stop
			else
* unclassified (39) things don't say their name
				doif va98 <> -1

					targ va05

*create a temporary Mirror Object to shout the Category of our real object
					new: simp 1 7 50202 "blnk" 1 0 0

*fake temp object needs to have the same category as the real one
					cato va50
*and also the same visibility setting according to attr
					doif va51 >= 16
						attr 16
					else
						attr 0
					endi

*check which side of the wrap the object is on and add or remove the appropriate offset
					doif va00 <= game "C2toDS_WrapRight" and va00 > game "C2toDS_WrapMiddle"

						subv va00 game "C2toDS_WrapOffset"

					elif va00 >= game "C2toDS_WrapLeft" and va00 < game "C2toDS_WrapMiddle"

						addv va00 game "C2toDS_WrapOffset"

					else
						stop
					endi

					mvto va00 va01

*					seta va06 targ
*
** send message to bubble factory to do visuals
*					rtar 1 2 10
*					mesg wrt+ targ 126 va99 va06 0
** target agent again, and send shout from it
*					targ va06

					ordr shou va99

					kill targ

				endi
			endi
		endi

	endi


endm




*Pointer Tracker - Raw Mouse Up script
scrp 1 7 50200 77

*	wait 1

*reset "mouse just clicked" variable
	setv mv01 0

endm





*A keypress
scrp 1 7 50200 73

	lock
*if the user pressed enter (or control S)
	doif _p1_ eq 'S' or _p1_ eq 13

*WHY IS THIS NEEDED. IT MAKES NO SENSE.
*(I believe it's waiting until the start of the next tick because the Key Down event takes place before the speech bubble exists)
		wait 0
		targ ownr
		inst

		sets va02 ""

*grab the pointer so we can check where it is
		targ pntr

*remember the pointer coords
		setv va00 posl
		setv va01 post

		doif game "C2toDS_RoomID" = gmap va00 va01

			setv va10 va00
			setv va11 va01
			setv va12 va00

			addv va10 10
			addv va11 10
			subv va12 10


*scan speech bubbles
			enum 1 2 9

*				dbg: outs "va00:"
*				dbg: outs vtos va00
*				dbg: outs "va10:"
*				dbg: outs vtos va10
*				dbg: outs "posr:"
*				dbg: outs vtos posr

*				dbg: outs "va00:"
*				dbg: outs vtos va00
*				dbg: outs "va12:"
*				dbg: outs vtos va12
*				dbg: outs "posl:"
*				dbg: outs vtos posl

*check if the speech bubble is within 10px of the pointer top left coord.
				setv va99 0

*first check Y pos
				doif posb > va01 and posb < va11

*then check X pos, taking into account that the speech bubble can appear on either side of the pointer
					doif posr >= va00 and posr < va10
						setv va99 1
					elif posl <= va00 and posl > va12
						setv va99 1
					endi

				endi

*if the above checks were true, carry on with the script
				doif va99 = 1

*set the ptxt in va02 for now
					part 1
					doif targ ne null
						sets va02 ptxt

*make sure the hand said something and didn't just press enter by mistake

						doif va02 <> ""

							inst

							setv va20 va00

*check which side of the wrap the pointer is on and add or remove the appropriate offset
							doif va00 <= game "C2toDS_WrapRight" and va00 > game "C2toDS_WrapMiddle"

								subv va20 game "C2toDS_WrapOffset"

							elif va00 >= game "C2toDS_WrapLeft" and va00 < game "C2toDS_WrapMiddle"

								addv va20 game "C2toDS_WrapOffset"

							else
								stop
							endi


*target the pointer and move it across the wrap
							targ pntr

							mvto va20 va01

*repeat the last thing the pntr said so that creatures can hear it through the wrap
							ordr shou va02

*test string to show that indeed, creatures can hear it
*							ordr shou "perfect noun 2 hand"

**debug: put the sentence you repeated in the debug output stream
*							dbg: outs va02

*move it back where it came from
							mvto va00 va01

						endi

					endi

				endi

			next

		endi

	endi

endm







rscr


*Delete Cameras*

enum 1 5 50200

	kill targ

next

*Delete Wrap Pieces*

enum 1 6 50200

	kill targ

next

*Delete Pointer Tracker*

enum 1 7 50200

	kill targ

next


*Delete Pointer Hand Hold Watcher

enum 1 7 20202

	kill targ

next



scrx 1 5 50200 9

scrx 1 5 50200 128

scrx 1 6 50200 9

scrx 1 7 50200 9

scrx 1 7 50201 9

scrx 1 7 50201 123

scrx 1 7 50202 9




*Remove "wrap" room links*

doif grap 2070 4764 ne -1 and link grap 2070 47640 grap 10375 47640 ne 0

*Atmosphere

	link grap 2070 47640 grap 10375 47640 0

*Desert Beach

	link grap 2070 48090 grap 10375 48090 0

*Biome 1

	link grap 2070 48340 grap 10375 48340 0

*Biome 2

	link grap 2070 48822 grap 10375 48822 0

*Machines to Volcano

	link grap 2070 49340 grap 10375 49340 0

endi