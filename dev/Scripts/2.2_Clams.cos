* 2 16 50200 - Clam
* 2 21 50224 - Pearl

*clams are shelled marine or freshwater molluscs belonging to the class bivalvia
*clams, invertebrates with shells divided into two pieces called valves
*these pieces are joined with a hinge joint
*and with two adductor muscles that open and and close the shell
*oh, clams are shelled marine or freshwater molluscs belonging to the class bivalvia~

*you can hide small things in clams

*put things in clams for 3 nights to make black pearls

*clicking on a clam releases whatever has been placed inside, if nothing is inside

*clam opens for user

*pearls take several days to grow inside of clams depending on the bounding box size


*NeoDement worked on these a bit but didn't get these things done:

*todo: clams should play their rocking animation far more frequently, like in C2
*todo: maybe clams shouldn't bounce their pearls for so long? they didn't do this very often in C2
*todo: automatically eject anything extra put into the clam if there's already at least 1 object in the clam.
*todo: turn off Greedy Cabin while the clam is closed
*todo: work out what the point is in a black pearl???



* Creation

reps 3

	new: vhcl 2 16 50200 "moe_C2toDS_clam" 23 21 rand 1000 3000

	mvsf rand 8580 9191 48630


	new: vhcl 2 16 50200 "moe_C2toDS_clam" 23 21 rand 1000 3000

	mvsf rand 8117 8345 48954

repe


*Clam - Constructor Script

scrp 2 16 50200 10

	inst

	cabn 7 20 57 60

*only hold one thing at a time. this doesn't seem to work as expected?
*	cabw 1

	cabp -1

	elas 0

	accg 10

	aero 30

*Carryable, Mouseable, Activateable, Greedy Cabin, Invisible, Suffer Collisions, Suffer Physics
	attr 223

	frat 2

	seta ov01 null

	tick rand 360 500

	perm 51

	seta ov08 null

endm


*Pearl - Constructor Script

scrp 2 21 50224 10

	attr 199

	elas 10

	aero 5

	accg 2

	perm 51

	bhvr 43

endm


*unused! creatures can't eat toys!

**Pearl - Eat Script
*
*scrp 2 21 50224 12
*
*	snde "reat"
*
*	doif crea from eq 1
*
*		targ from
*
**inject the creature with some stress
*		chem 125 .015
*
*	endi
*
*	kill ownr
*
*endm


*Pearl - Activate 1 Script

scrp 2 21 50224 1

	inst
	doif crea from eq 1
		stim writ from 97 1
	endi

	addv vely rand -7 -10
	addv velx rand -7 7

endm


*Pearl - Activate 2 Script

scrp 2 21 50224 2

	inst
	doif crea from eq 1
		stim writ from 97 1
	endi

	addv vely rand -7 -10
	addv velx rand -7 7

endm


*Pearl - Hit Script

scrp 2 21 50224 3

	inst
	doif crea from eq 1
		stim writ from 97 1
	endi

	addv vely rand -7 -10
	addv velx rand -7 7

endm


*Pearl - Activate by clam Script

scrp 2 21 50224 1001

	lock

*				reps rand 20 30

*no point bouncing more than 20 times
	reps 20

*constantly make sure you're inside an open clam so you can immediately stop jumping if the clam ever closes.
		doif carr <> null
			targ carr
			doif fmly = 2 and gnus = 16 and spcs = 50200
*make sure the clam is open
				doif part 1 = 1 and part 2 = 1

*target the pearl again and make it a do a lil jump
					targ ownr
					subv vely 12

					wait 20

*immediately stop the script if anything goes wrong (todo: this is a mess clean it up...)
				else
					targ ownr
					stop
				endi
			else
				targ ownr
				stop
			endi
		else
			targ ownr
			stop
		endi
	repe



	unlk

endm





*Clam - Got Carried Agent Script

scrp 2 16 50200 124

*if it's a pearl
	epas 2 21 50224
*store the pearl in ov08
		seta mv08 targ

	next


endm



*1 sec = 19.5

*360 seconds in a day cycle or 7020 TICKS in a day cycle



*clam ticks 360-500, if 360, clam will move every 18 seconds

*or check if it's out of water



*18 seconds goes into 6 minutes 20 times. 6 minutes is the day cycle.

*SO! If tick is 360, clam will make a pearl roughly every day cycle or so





*Clam - Timer Script

scrp 2 16 50200 9

*	lock

	inst

*check for pearl

*ov08 is a pearl present?

*ov13 eq 1 black pearl





*don't rock if you're open

	doif part 1 = 0 and part 2 = 0

		anim [0 1 2 3 4 5 6 7 0]

	else

*if you're open, for some reason... close

		mesg writ ownr 0

	endi



	addv ov01 1







*if tick is 360, the clam will make a pearl roughly every day cycle or so

	doif ov01 ge rand 10 20



		setv ov01 0



		seta ov08 null





		epas 0 0 0

*if it's a pearl
			doif fmly eq 2 and gnus eq 21 and spcs eq 50224

*store the pearl in ov08
				seta mv08 targ

			endi

			doif targ ne null and targ ne mv08

				setv mv13 1

			endi

		next





*if no pearl, make one, IF you're closed.

		doif ov08 eq null and part 1 = 0 and part 2 = 0

*make a white pearl
			doif ov13 eq 0

				setv va00 37

*make a black pearl
			else

				setv va00 38

			endi



*kill whatever was placed in here as foodstuffs

			epas 0 0 0

				doif targ ne null

*don't kill pearls
					doif fmly eq 2 and gnus eq 21 and spcs eq 50224

					else

						kill targ

					endi

				endi

			next



*make pearl

			setv va03 posx

			setv va04 posy

*plane isn't important as it gets overridden when ejecting from the clam anyway
			new: simp 2 21 50224 "moe_C2toDS_clam" 2 va00 3000

			mvsf va03 va04

			spas ownr targ

		endi



*default back to white pearl

		setv ov13 0

	endi




*set focus back to the clam that ran this script
	targ ownr


*if you're out of water, open up for a bit, then shut like a bitch (like a WHAT??)

	setv va00 rtyp room ownr

	doif va00 ne 8 and va00 ne 9

		doif part 1 = 0 and part 2 = 0

			mesg writ ownr 0

		else

			wait tick

			mesg writ ownr 0

		endi

	else

		part 0

*anim [0 1 2 3 4 5 6 7 0]

	endi

*	unlk

endm


*Clam - Activate 1 Script

scrp 2 16 50200 1

*hopefully lock here helps prevent a "part already exists" bug
	lock

	inst

*remember clam plane for later
	setv va01 plne

*if part 1 and 2 don't exist, then the clam is closed
	doif part 1 = 0 and part 2 = 0

*stage open

		pose 10

		pat: dull 1 "moe_C2toDS_clam" 31 0 0 1

*		pat: dull 2 "moe_C2toDS_clam" 32 0 0 -2

*starts on a higher plane and is swapped for the same part but on a lower plane later instead.
*this stops the pearl drawing in front of the clam for a couple of frames.
		pat: dull 2 "moe_C2toDS_clam" 32 0 0 2

		slow

		part 2

*DON'T set c2 framerate - we are manually controlling it so we can fix an animation hitch
*		frat 2

*start clamshell opening anim...
		anim [0 0 1]
		over

		inst


*check the passengers and do things with them!
		epas 0 0 0

			doif targ ne null

*if it's a pearl and click was NOT from the pointer, do the idle jump anim
				doif targ eq mv08 and from ne pntr
					mesg writ targ 1001

*if it's a pearl and click was from the pointer, eject it!
				elif targ eq mv08 and from eq pntr

					rpas ownr targ

*set plane of ejected object 5 higher than the clam itself so it doesn't get lost behind the clam
					addv va01 5
					plne va01

*move the ejected pearl up a few pixels so it appears to eject from the mouth of the clam instead of near the bottom
					setv va02 posl
					setv va03 post

					subv va03 9

*clams don't want their pearls back once humans have had their hands on them
*					seta mv08 null

*do an unsafe move if possible
					doif tmvt va02 va03 = 1
						mvto va02 va03
					else
						mvsf va02 va03
					endi

*apply some velocity
					setv vely -12

*only drop stuff that was in the clam when clicked
				elif from eq pntr

					rpas ownr targ

*apply some velocity
					setv vely -12

				endi

			endi

		next

		targ ownr


*re-create the clamshell top half to change the plane to a lower one
		inst
		pat: kill 2
		pat: dull 2 "moe_C2toDS_clam" 32 0 0 -2

		part 2

*...finish clamshell opening anim		
		anim [1 2 2 3 3 4 4]

	else

*moved this up to the top of the script...
*		lock

*disabled this entirely, all it seemed to do is make the pearl jump and down inside a closed clam
*		epas 0 0 0
*
*			doif fmly eq 2 and gnus eq 21 and spcs eq 50224
*
*				mesg writ mv08 1001
*
*			else
*
**	rpas ownr targ
*
*			endi
*
*		next

		targ ownr

		part 2

*start clamshell closing anim...
		anim [4 4 3 3 2 2 1]
		over

*re-create the clamshell top half to change the plane to a higher one
		inst
		pat: kill 2
		pat: dull 2 "moe_C2toDS_clam" 32 0 0 2

		part 2

*...finish clamshell closing anim		
		anim [1 0 0]

		over

		part 0

		pose 0

		pat: kill 1

		pat: kill 2

	endi

	unlk



endm



*OLD:

* Timer script

*scrp 2 16 50200 9

*	doif ov00 eq 0

*		setv va00 rand 0 9

*		doif va00 eq 0

*			doif rtyp room ownr ne 8 and rtyp room ownr ne 9

*				setv ov00 1

*			endi

*		else

*			setv ov00 0

*			base 0

*			anim [0 1 2 3 4 5 6 7]

*		endi

*	endi

*	doif ov00 eq 1

*		base 8

*		anim [0 1 2 3 4]

*		over

*		etch 2 15 0

*			doif relx ownr targ le 25 and rely ownr targ le 25

*				tick 0

*				setv velx 0

*				setv vely 0

*				seta mv01 targ

*				targ ownr

*				base 8

*				anim [4 3 2 1]

*				over

*				doif ov01 ne null

*					targ ov01

*					kill targ

*				endi

*				targ ownr

*				pose 0

*				setv ov00 0

*				stop

*

*

*			else

*				targ ownr

*				setv ov00 2

*				stop

*			endi

*		next

*		setv ov00 2

*		stop

*	endi

*	doif ov00 eq 2

*		doif rtyp room ownr eq 8 or rtyp room ownr eq 9

*			setv ov00 3

*			stop

*		endi

*		setv va00 rand 2 5

*		reps va00

*			base 13

*			anim [0 1 2 3 4 5 6 7]

*			over

*		repe

*		setv ov00 3

*	endi

*	doif ov00 eq 3

*		base 8

*		anim [4 3 2 1 0]

*		over

*		setv ov00 0

*		stop

*	endi

*endm



** Activate 1

*scrp 2 16 50200 1

*	doif ov00 eq 0

*		setv ov00 1

*	endi

*	doif ov00 eq 2

*		setv ov00 3

**stim writ from 0 255 0 0 18 50 0 0 0 0 0 0

*	endi

**setv actv 0

*endm


*Clam - Agent Exception Script

scrp 2 16 50200 255

	stop

endm


*Remove Script

rscr

enum 2 16 50200

	kill targ

next

enum 2 21 50224

	kill targ

next

scrx 2 16 50200 10
scrx 2 16 50200 9
scrx 2 16 50200 1
scrx 2 16 50200 124
scrx 2 16 50200 255

scrx 2 21 50224 10
*scrx 2 21 50224 12
scrx 2 21 50224 1
scrx 2 21 50224 2
scrx 2 21 50224 3
scrx 2 21 50224 1001
scrx 2 21 50224 4