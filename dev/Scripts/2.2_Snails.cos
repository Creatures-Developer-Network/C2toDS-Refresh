* 2 15 50201 - Snail 

* for now, these are invisible to creatures. If at some point we feel like 
* adding push/pull/hit/eat scripts (and population management) we can change that. - Aiko


* Creation - garden

reps rand 2 4

	new: simp 2 15 50201 "moe_C2toDS_snail" 32 0 rand 1000 3000

	setv ov00 0

	seta ov20 null

	mvsf rand 5410 6540 49800

repe



* Creation - hallway under norn burrow

reps rand 1 3

	new: simp 2 15 50201 "moe_C2toDS_snail" 32 0 rand 1000 3000

	setv ov00 0

	seta ov20 null

	mvsf rand 6700 7400 48720

repe



* biosphere

reps rand 1 2

	new: simp 2 15 50201 "moe_C2toDS_snail" 32 0 rand 1000 3000

	setv ov00 0

	seta ov20 null

	mvsf rand 3840 4050 49320

repe






scrp 2 15 50201 10

	attr 210

	accg .5

	elas 0

	fric 50

	perm 60

	rnge 200

	tick rand 10 20

	base 16

	pose 0

	puhl -1 11 6

	setv ov00 0

	seta ov08 null

	setv ov02 rand 1800 2200

endm





* Snail timer script

scrp 2 15 50201 9



*	If falling or being carried, stop script

	doif carr ne null or fall eq 1

		wait 20

		stop

	endi



* Basic stuff

	gsub basics



* 	Life subroutines

	doif ov00 eq 0

		gsub child

	elif ov00 eq 1

		gsub adult

	elif ov00 eq 2

		gsub mother

	endi





*	Basic variable stuff

	subr basics

*		If old, die

		doif ov02 le 0

			gsub die

		endi

*		Environmental stuff

		setv va03 grap posx posy

		doif prop va03 2 ge .8

			subv ov02 5

		endi

		doif prop va03 3 lt .3

			subv ov02 5

		endi

* 		If in water, die quickly

		doif rtyp va03 eq 9 or rtyp va03 eq 10

			subv ov02 10

			accg .2

			stop

		endi

* 		If pregnant, subv pregnancy timer

		doif ov05 eq 1

			subv ov06 1

		endi

*		If wall nearby, move

		gsub wallcheck

	retn



* 	Child script

	subr child



* 		If old enough, become an adult.

		doif ov02 lt 1200

* 			break from mother

			doif ov20 ne null

				targ ov20

				setv ov00 1

			endi

			targ ownr

			setv ov00 1

			base 0

			puhl -1 10 4

			plne rand 2000 3000

*			dbg: outs "A child snail became an adult! Let's throw a barmitzvah!"

		endi



* 		Follow mother

		doif ov20 ne null

			targ ov20
			
			inst

			doif targ ne null

				setv mv90 posx

			endi
			
			slow

		else

			targ ownr

			setv ov02 1199

			stop

		endi

		targ ownr

* 		Move!

		gsub move

	retn



* Adult script

	subr adult



		gsub moverandom



* 		If old enough and there aren't many snails around, make some

*		doif ov01 lt 1200 and ov07 lt 2

		doif ov02 lt 1800 and ov07 lt 2 and ov05 ne 1

			gsub letthemmakebabies

		endi



*		Pregnancy

		doif ov05 eq 1 and ov06 le 0

*			dbg: outs "having a baby"

			gsub makeababy

		endi



	retn



* 	Mother script

	subr mother

		gsub moverandom

	retn



*	Move randomly

	subr moverandom

*		is it time to change direction?

		doif name "numberofwalks" < name "currentwalk"

			setv va01 rand 50 -50

			setv ov90 posx

			addv ov90 va01



			setv name "numberofwalks" rand 15 30

			setv name "currentwalk" 0



* 		Move!

		endi

		gsub move



	retn



* Wall check

	subr wallcheck

		doif obst left lt 20

			setv va01 rand 20 50

			setv ov90 posx

			addv ov90 va01

			setv name "numberofwalks" rand 5 30

			setv name "currentwalk" 0

		elif obst rght lt 20

			setv va01 rand -20 -50

			setv ov90 posx

			addv ov90 va01

			setv name "numberofwalks" rand 5 30

			setv name "currentwalk" 0

		endi

	retn





* 	Move subroutine

	subr move

		doif posx lt ov90

*			dbg: outs "moving right"

			frat 2

			anim [0 1]

			addv velx 4

			subv vely -2

			over

			anim [2 3]

			over

			anim [4 5]

			addv velx 4

			subv vely -2

			over

			anim [6 7]

			over

		else

*			dbg: outs "moving left"

			frat 2

			anim [8 9]

			subv velx 4

			subv vely -2

			over

			anim [10 11]

			over

			anim [12 13]

			subv velx 4

			subv vely -2

			over

			anim [14 15]

			over

		endi

		addv name "currentwalk" 1

	retn



* Pregnancy/pop monitor stuff

	subr letthemmakebabies

		rnge 1000

		setv va10 0

		esee 2 15 50201

			addv va10 1

		next

		rnge 200

		doif va10 lt 5

*			dbg: outs "fallen pregnant"

			setv ov05 1

			setv ov06 rand 50 150

		endi

	retn



* babymakin' shiz

	subr makeababy

		setv va00 posx

		setv va01 posy

		setv va02 plne

		addv va02 1

		new: simp 2 15 50201 "moe_C2toDS_snail" 32 0 va02

		seta ov20 ownr

		setv ov00 0

		mvsf va00 va01

		targ ownr

		setv ov00 2

		setv ov05 0

		addv ov07 1

	retn



* 	DIEEEEEE

	subr die

*		dbg: outs "A snail is dying :("

		doif rtyp grap posx posy ne -1

			doif ov00 gt 0

				altr -1 2 .02

				altr -1 3 .015

				altr -1 4 .0124

			else

				altr -1 2 .01

				altr -1 3 .008

				altr -1 4 .006

			endi

		endi

		kill ownr

	retn



endm
















rscr
enum 2 15 50201

	kill targ

next

scrx 2 15 50201 10

scrx 2 15 50201 9


