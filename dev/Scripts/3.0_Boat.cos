* 3 1 50201
* 3 12 50201 - Call Buttons
* 3 13 50201 - Queue Agents

* Verm here, redoing the entire boat system so it's better for creature navigation, hopefully
* Aiko changed the placeholder sprites to call buttons (and made them light up)
* Also made the creature-grabbing more reliable
new: vhcl 3 1 50201 "moe_C2toDS_boat" 1 0 2000

cabp 1

bhvr 0

cabn 11 0 155 110

attr 20

setv ov00 0

pat: dull 1 "moe_C2toDS_boat" 1 0 73 20

pat: dull 2 "moe_C2toDS_boat" 2 49 91 21

pat: butt 3 "moe_C2toDS_boat" 12 3 60 22 21 [] 1001 0

cato 35

mvto 8490 48180

new: simp 3 12 50201 "moe_C2toDS_lifts" 2 7 2000

attr 4

bhvr 3
* Left Butt
setv ov00 1

cato 2

mvto 8531 48153

new: simp 3 12 50201 "moe_C2toDS_lifts" 2 7 2000

attr 4

bhvr 3
* Right Butt
*setv ov00 0

cato 2

mvto 9278 48153

* 1 & 2 will be the same
scrp 3 12 50201 1
	inst
	* light up, light up
	rtar 3 1 50201
	doif ov00 eq mv00
		targ ownr
		pose 1
	endi
*Queue Object!
	targ from
	doif crea targ eq 1
		sets va48 gtos 0
		* check for any existing queue object
		enum 3 13 50201
			doif ov01 eq va48
				addv va49 1
			endi
		next
		* make a queue object if there's not one already
		doif va49 eq 0
			new: simp 3 13 50201 "blnk" 1 0 0
			setv ov00 mv00
			sets ov01 va48
			tick 20
		endi

		stim writ from 75 1
		stim writ from 96 1
		urge writ from 0 0.5 0 0.5
	endi
	rtar 3 1 50201
	mesg writ targ 1001
endm

scrp 3 12 50201 2
	inst
	
* light up, light up
	rtar 3 1 50201
	doif ov00 eq mv00
		targ ownr
		pose 1
	endi
	
*Queue Object!
	targ from
	doif crea targ eq 1
		sets va48 gtos 0
		* check for any existing queue object
		enum 3 13 50201
			doif ov01 eq va48
				addv va49 1
			endi
		next 
		* if there's no queue objects, make one
		doif va49 eq 0
			new: simp 3 13 50201 "blnk" 1 0 0
			setv ov00 mv00
			sets ov01 va48
			tick 20
		endi
		
		stim writ from 75 1
		stim writ from 96 1
		urge writ from 0 0.5 0 0.5
	endi
	rtar 3 1 50201
	mesg writ targ 1001

endm

scrp 3 13 50201 9
	inst
* Just here to continue injecting wait
	doif ooww ov01 eq 3
		targ mtoc ov01
		doif targ ne null
			doif carr eq null
				stim writ from 75 1
			else
* Picked up, stop queueing
				stim writ targ 96 0
				driv 19 -1.0
				kill ownr
			endi
		else
			kill ownr
		endi
	else
		kill ownr
	endi
endm

scrp 3 1 50201 1

*	mesg writ ownr 1001

endm



scrp 3 1 50201 1001
	lock
	inst
	
	loop
		doif ov00 eq 0
			gsub rght

		else
			gsub left

		endi
		inst


		setv ov01 0
*		dbg: outv totl 3 13 50201
	untl totl 3 13 50201 le 0
	enum 3 12 50201
		pose 0
	next
	unlk
	subr rght
		inst
* Get the queued creatures
		enum 3 13 50201
			doif ov00 eq 1
				doif ooww ov01 eq 3
					
					* spas takes some time to work, so loop
					* and keep checking if you got a creature
					* before continuing
					
					loop
						spas ownr mtoc ov01
						wait 1
						addv va46 1
						seta va45 targ
						targ ownr
						epas 4 0 0
							addv va44 1
						next
						targ va45
					untl va44 gt 0 or ooww ov01 ne 3 

					kill targ
				else
					kill targ
				endi
			endi
		next
		slow
		part 3

		anim [1 2]

		setv ov00 1

		part 2

		loop

			doif posl lt 9120

				frat 3

				anim [8 7 6 5 4 3 2 1 0 9]

				snde "row1"

			else

				anim [8]

			endi

			setv velx 8

			wait 1

			setv velx 6

			wait 2

			setv velx 4

			wait 3

			setv velx 2

			wait 3

			over

			epas 4 0 0
				stim writ targ 75 1
			next

		untl posl ge 9120

		setv velx 0
		inst
		epas 4 0 0
			rpas ownr targ
			mvft 9283 48246
			stim writ targ 96 0
			driv 19 -1.0
		next
	retn

	subr left
		inst
* Get the queued creatures
		enum 3 13 50201
			doif ov00 eq 0
				doif ooww ov01 eq 3
		
					* spas takes some (inconsistent amount of) to work, so loop
					* and keep checking if you got a creature
					* before continuing
					
					loop
						spas ownr mtoc ov01
						wait 1
						addv va46 1
						seta va45 targ
						targ ownr
						* epas says it works on ownr but...it seems to work on targ actually? 
						epas 4 0 0
							addv va44 1
						next
						targ va45
					untl va44 gt 0 or ooww ov01 ne 3 
					* dbg: outs "It took this many tries to get the norn"
					* dbg: outv va46
					kill targ
				else
					kill targ
				endi
			endi
		next
		slow
		part 3

		anim [1 0]

		setv ov00 0

		part 2

		loop
			doif posl gt 8490

				frat 3

				anim [9 0 1 2 3 4 5 6 7 8]

				snde "row1"

			else

				anim [9]

			endi

			setv velx -8

			wait 1

			setv velx -6

			wait 2

			setv velx -4

			wait 3

			setv velx -2

			wait 3

			over
			epas 4 0 0
				stim writ targ 75 1
			next

		untl posl le 8490

		setv velx 0
		inst
		epas 4 0 0
			rpas ownr targ
			mvft 8543 48246
			stim writ targ 96 0
			driv 19 -1.0
		next
	retn
endm



*scrp 3 1 50201 9

*	doif ov01 eq 0

*		setv va00 0

*		etch 4 0 0

*			setv va00 1
*
*		next

*		doif va00 eq 1

*			doif posl lt 6745

*				mesg writ ownr 0

*			else

*				mesg writ ownr 1

*			endi

*		endi

*	endi

*	tick 1200

*endm

rscr
enum 3 1 50201

	kill targ

next
enum 3 12 50201
	kill targ
next
enum 3 13 50201
	kill targ
next
