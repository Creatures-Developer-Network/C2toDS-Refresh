* 1 15 50219 - Doozer



* Initial version by NeoDement

* Some script based off Moe's Devil Doozer from https://eemfoo.org/archive/downloads/4c9f
* Some script also based off Clucky's C12DS Learning Computer from https://eemfoo.org/archive/downloads/de80




***************
**SOUNDS USED**
***************
* DOOZ - DOZ2 *
* DOZ2 - DOOS *
* DOZ3 - DOZ3 *
***************
* Sounds were renamed to match Mr nStuff's Doozer DS from https://eemfoo.org/archive/downloads/c18d
* (to prevent either one having the wrong sounds if both are installed)





*make 5 doozers


*near the incubator room sub bay
new: simp 2 15 50219 "moe_C2toDS_Doozer" 18 0 rand 4500 5500
tick 1
mvsf 8312 48433


*at the bottom of the incubator room lift shaft 
new: simp 2 15 50219 "moe_C2toDS_Doozer" 18 0 rand 4500 5500
tick 4
mvsf 7882 48718


*in the biome
new: simp 2 15 50219 "moe_C2toDS_Doozer" 18 0 rand 4500 5500
tick 5
mvsf 3963 49299


*to the left of the volcano door
new: simp 2 15 50219 "moe_C2toDS_Doozer" 18 0 rand 4500 5500
tick 6
mvsf 8584 49787


*in the swamp
new: simp 2 15 50219 "moe_C2toDS_Doozer" 18 0 rand 4500 5500
tick 8
mvsf 7479 49820




*Constructor Script

scrp 2 15 50219 10

	inst

*C2 Framerate
	frat 2

*range is a bit lower than default (500)
	rnge 400

*physics
	accg 3

	aero 2

	elas 25

	fric 50

*Carryable + Mouseable + Activateable + Suffer Collisions + Suffer Physics
	attr 199

**Activate 1 + Activate 2 + Hit + Eat + Pick Up
*	bhvr 59

*No longer edible!
	bhvr 43

*X velocity per step
	setv ov06 3

*Y velocity per step
	setv ov07 6

*perm is adjusted to 50 later in the script so doozers can jump through thin platforms if stuck underwater,
*then reset back to 51 in the timer script so they can stand on the platform they just jumped through.
	perm 51

*tick rate
	setv ov00 12

*tick rate / 3 ( used for applying walk velocity gradually between ticks)
	setv ov01 ov00
	divv ov01 3


*initial tick is overridden just after creation but I'm leaving this line here as a default in case we make a doozer agent or something
	tick ov00


*easier to click if we use bounding box instead of pixel perfect
	tran 0 -1

*random starting direction
	setv ov02 rand 0 1


*variables used to detect when a doozer is stuck in a corner:

*what position were you at least time the timer ticked?
	setv ov03 0

*how long have you been stuck in this same spot?
	setv ov04 0

*reclassified as a Toy for now... apparently this is better for instincts because you can't eat Toys!
	cato 21



***********************************************
**FIND A SAFE SPACE TO GO TO FOR PERM CHANGES**
***********************************************

*C2toDS Above Light Blue Ocean
	doif grap 8854 47957 <> -1
		setv mame "SafeSpace_X" 8854
		setv mame "SafeSpace_Y" 47957
*DS Capillata
	elif grap 2627 9038 <> -1
		setv mame "SafeSpace_X" 2627
		setv mame "SafeSpace_Y" 9038
*C3 Outside Airlock
	elif grap 4042 4180 <> -1
		setv mame "SafeSpace_X" 4042
		setv mame "SafeSpace_Y" 4180
*otherwise set it to the room that always exists at 0 0
	else
		setv mame "SafeSpace_X" 100
		setv mame "SafeSpace_Y" 100
	endi

***********************************************


*drowning timer
	setv ov99 0

	wait 1
	inst


*remember where you spawned. we'll go back there if we drown.
	setv ov50 posl
	setv ov51 post


endm




*Collision Script

scrp 2 15 50219 6

	doif wall eq left

		setv ov02 1

	elif wall eq rght

		setv ov02 0

	endi

endm




*Activate 1 Script

scrp 2 15 50219 1

	inst

**let the norn know they played with a critter
*	stim writ from 86 1

*stim the creature so they played with a toy
*but also give them the chemicals of playing with a critter
	stim writ from 86 0
	stim writ from 97 0.5

	call 1001 0 0

endm




*Activate 2 Script

scrp 2 15 50219 2

	inst

**let the norn know they played with a critter
*	stim writ from 86 1

*stim the creature so they played with a toy
*but also give them the chemicals of playing with a critter
	stim writ from 86 0
	stim writ from 97 0.5

	call 1001 0 0


endm





*Talk Script (called by Activate 1 and 2)

scrp 2 15 50219 1001

	lock

	setv velx 0

	wait 2

	inst

*teaching words. a doozer teaches nouns like "food" or "grendel"


*what type of word is this? for constructing a functional ORDER SHOU string.

*"perfect " means learn straight away, "learn " means learn gradually.
	sets va03 "perfect noun "
*	sets va03 "learn noun "

*what array name are we looking for?
	sets va04 "Agent Categories"

*how many entries are there in "Agent Categories"?
	setv va52 rean va04

*grab a random entry from that array (-1 for base 0/1 reasons)
	subv va52 1
	setv va51 rand 0 va52

*start to construct string, starting with the chosen noun
	doif va51 <> 1
		sets va50 read va04 va51
*if va51 was 1, that means it was "hand", so get the hand name instead.
	elif va51 = 1
		sets va50 hand
	endi


*randomly choose a direction before talking
	setv va00 rand 0 1

*facing left
*	doif pose le 5
	doif va00 = 0

		anim [12 13 14 255]
		setv ov02 0

*facing right
*	elif post gt 5
	else

		anim [15 16 17 255]
		setv ov02 1

	endi


*construct string - "perfect noun N whatever"
	sets va40 va03
	adds va40 vtos va51
	adds va40 " "
	adds va40 va50

*sound
	snde "doz2"

* send message to bubble factory to do visuals
	rtar 1 2 10

*	say what you mean
	mesg wrt+ targ 126 va50 ownr 0

*	show the hidden command
*	mesg wrt+ targ 126 va40 ownr 0

	targ ownr

	wait 10

*now actually say the hidden command so that norns can hear it, repeat it, learn from it
*	ordr shou va40

*doing it based on norns that can see it so that RNGE is respected and they dont hear through walls.
	ordr sign va40


*SPECIAL FUNCTION TO LET NORNS HEAR THIS OVER THE WORLD WRAP
*(_P1_ is object to shout from, _P2_ is string to shout)
	rtar 1 7 50205
	doif targ <> null
		mesg wrt+ targ 1000 ownr va40 0
	endi
	targ ownr


*reset timer for consistency
	tick 0
	wait 8
	tick ov00

endm



*(disabled because reclassed as a Toy)
**Eat Script - Creatures "take a bite" of the Doozer which makes them panic and jump away, stimming the creature with some "Ate a critter/animal"
*
*scrp 2 15 50219 12
*
*	lock
*
**tell the norn they ate a critter... but only a little bit
*	stim writ from 80 .25
*
**make a bite sound	
*	snde "reat"
*
**force it to be dropped if a creature is holding it
*	doif crea carr = 1
*		targ carr
*		drop
*		targ ownr
*	endi
*
*	wait 7
*
*
**AAAAA DONT EAT ME!!!!
*	snde "doz3"
*	setv vely -35
*
**apply random X velocity
*	loop
*		setv va00 rand -1 1
*	untl va00 <> 0
*	mulv va00 20
*	setv velx va00
*
**set direction of travel to match new random velocity
*	doif va00 < 0
*		setv ov02 0
*	elif va00 > 0
*		setv ov02 1
*	endi
*
*
*
*endm



*Hit Script

scrp 2 15 50219 3

	lock

**let the norn know they hit a critter
*	stim writ from 87 1

*stim the creature so they played with a toy
*but also give them the chemicals of playing with a critter
	stim writ from 86 0
	stim writ from 97 0.5

*make a smack sound
	snde "spnk"

*	wait 7

	inst

*AAAAA DONT HIT ME!!!!
	snde "doz3"
	setv vely -17

*if you were hit by a creature, store their direction
	doif crea from = 1
		targ from

*		dirn 2 - right
*		dirn 3 - left
		setv va01 dirn

	else
		setv va01 -1
	endi

	targ ownr

*norn was facing right
	doif va01 = 2

*apply random positive X velocity
		setv velx rand 14 17

*norn was facing left
	elif va01 = 3

*apply random negative X velocity
		setv velx rand -14 -17

	else

*apply random X velocity
		loop
			setv va00 rand -5 5
		untl va00 <> 0

		setv velx va00

	endi


endm







*Timer Script

scrp 2 15 50219 9

*	lock

*	inst

*if the tick rate wasn't what we expected when the timer went off, fix it
*because we are putting a slight variety on each doozer's initial tick so they're not all in sync
	doif tick <> ov00
		tick ov00
	endi


*rarely flip direction
	doif rand 0 20 = 0
		doif ov01 = 0
			setv ov02 1
		else
			setv ov02 0
		endi
	endi


**rare chance for a doozer to teach a word without interaction
*	setv va02 rand 0 100
*	doif va02 = 1
*		call 1 0 0
*	endi

**reduce boredom of nearby creatures
*	esee 4 0 0
*		chem 156 -0.01
*	next
*
*	targ ownr


*we are UNDERWATER!! (and not being carried)
	doif rtyp room targ eq 8 or rtyp room targ eq 9 and carr = null
		setv va60 1

	endi


	slow

*we're underwater, so:
	doif va60 = 1

		lock

*temporarily set PERM to 50 so doozer can jump out of water easier by going through the bottom of platforms
		perm 50

		snde "doz3"
		setv vely -35

*apply random X velocity
		loop
			setv va00 rand -1 1
		untl va00 <> 0
		mulv va00 20
		setv velx va00

*set direction of travel to match new random velocity
		doif va00 < 0
			setv ov02 0
		elif va00 > 0
			setv ov02 1
		endi





*keep track of how long we've been underwater
		addv ov99 1

		doif ov99 > 10

*reset drown timer to stop multiple smoke puffs
			setv ov99 0

			setv va00 posl
			setv va01 post

			setv va02 plne
			addv va02 1



*teleport FX out
			new: simp 1 17 50200 "smoke" 5 10 va02

			seta va80 targ

			attr 32

			mvto va00 va01

			frel ownr

			flto -12 0

			snde "wrp2"


*play half the teleport anim in the current room...
			anim [0 1]

			over

			inst

			setv va90 posl
			setv va91 post

			frel null

			mvto va90 va91

			targ ownr

*reset perm after safe move
			perm 51

			mvsf ov50 ov51

			targ va80

*...and the other half plays without being attached to the doozer
			anim [2 3 4]

			over

			inst

			kill targ

			targ ownr








			setv va00 posl
			setv va01 post


*teleport FX in

			new: simp 1 17 50200 "smoke" 5 25 va02

			attr 32

			mvto va00 va01

			frel ownr

			flto -12 0

			snde "wrp1"

			anim [0 1 2 3 4]

			over

			inst

			kill targ

			targ ownr


			stop

			unlk
		endi


*NOT underwater
	else

*drowning timer reset
		setv ov99 0

*33% chance to make a sound every time it takes a step while not underwater
		setv va00 rand 0 2
		doif va00 = 1
			sndc "dooz"
		endi
	endi



	inst






*we have increased perm
	doif perm = 50

*wait a moment before resetting perm, so that we may jump through a thin wall instead of just a thin floor. good for when the water barriers are turned on.
*		wait rand 1 5
		wait 3

		inst

		setv va50 perm
		setv va00 posl
		setv va01 post

*try and set perm to 51 if it's not inside a wall
*temporarily move to a safe out of bounds spot to test movement
		mvto mame "SafeSpace_X" mame "SafeSpace_Y"
		perm 51
		doif tmvt va00 va01 = 0
			perm va50
		endi
		mvto va00 va01
	endi


*flip direction if you touched a wall recently
	doif wall eq left

		setv ov02 1

	endi



	doif wall eq rght

		setv ov02 0

	endi




*UNSTUCK CODE:

*if he bumps into the far right slightly diagonal wall of the volcano he gets stuck - so we detect if X position hasn't changed by more than 5
*every timer tick and if it doesn't change for N ticks in a row, change direction because you got stuck.


*ov03 - what position was this doozer at last frame?
*va10 - what position is this doozer at this frame? +5
*va11 - what position is this doozer at this frame? -5


	setv va10 posx
	setv va11 va10

	addv va10 5
	subv va11 5

*for example:
*ov03 = 0
*va10 = 5
*va11 = -5
*0 < 5 and 0 > -5 is true

	doif ov03 < va10 and ov03 > va11 and movs = 0
*add 1 to how long we've been stuck counter
		addv ov04 1
	else
*we moved! reset stuck counter
		setv ov04 0
	endi

	setv ov03 posx


*if you haven't moved much the last N ticks
	doif ov04 > 1

		doif ov02 = 0
			setv ov02 1
		else
			setv ov02 0
		endi

*reset ov04 for next time we have trouble with a wall
		setv ov04 0

	endi








*MOVE:


*LEFT
	doif ov02 eq 0

		anim [0 1 2 3 4 5]

*if they're falling, no velocity
		doif fall = 0
			subv vely ov07

			subv velx ov06

			wait ov01

			subv vely ov07

			subv velx ov06

			wait ov01

			subv vely ov07

			subv velx ov06
		endi

*RIGHT
	elif ov02 eq 1

		anim [6 7 8 9 10 11]

*if they're falling, no velocity
		doif fall = 0
			subv vely ov07

			addv velx ov06

			wait ov01

			subv vely ov07

			addv velx ov06

			wait ov01

			subv vely ov07

			addv velx ov06
		endi
	endi

endm
























*hell no we won't go

rscr

enum 2 15 50219

	kill targ

next

scrx 2 21 50223 10
scrx 2 21 50223 1
scrx 2 15 50219 10
scrx 2 15 50219 6
scrx 2 15 50219 1
scrx 2 15 50219 9
scrx 2 21 50222 6