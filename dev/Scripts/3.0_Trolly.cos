* 1 8 50202 - Some decorative bits related to the trolly
* 3 1 50205 - Trolly

* The call buttons still aren't consistent with how they light up
* But I'm tired and it's a very minor issue that can be fixed on a more detailed pass x.x




*TODO?:

*only stim a norn every X ticks while in trolly so their brains freeze up less?

*THE CALL BUTTONS...

*finalize call button light ups somehow. right now they briefly light up when pressed, then the trolly automatically lights whichever one it's heading towards.

*ideally the hand would be able to queue up trolley movements in the same way norns can (much like lifts), then they could also use the same logic as lifts to light up.

*there is some messy commented code on the buttons relating to lighting up for now... I am sorry.

*and finally, it would probably be better to control the button pose with a script (or some OV check) instead of simply using the pose command,
*as LOCK/UNLK in the button script are currently doing nothing to prevent the occasional awkward flicker.

*and FINALLY FINALLY, when these buttons are good enough, they should be used as a template for the other c2tods vehicles.

* -NeoDement




*left pulley
new: simp 1 8 50202 "moe_C2toDS_trolly" 1 5 3
attr 16
mvto 4457 48574


*right pulley
new: simp 1 8 50202 "moe_C2toDS_trolly" 1 6 3
attr 16
mvto 5878 48235


*cable
new: simp 1 8 50202 "moe_C2toDS_trolly" 1 7 2
attr 16
mvto 4483 48265







*C1 Trolly, Found in the wilderness. :D



new: vhcl 3 1 50205 "moe_C2toDS_trolly" 1 0 2000

mvto 5810 48257

cato 35
attr 16

*initial direction
setv ov00 5

*is the trolly playing a sound?
setv ov99 0

*Left

pat: butt 1 "moe_C2toDS_trolly" 1 2 18 58 0 [] 1001 0

*Right

pat: butt 2 "moe_C2toDS_trolly" 3 2 81 58 0 [] 1002 0

*Handle

pat: dull 3 "moe_C2toDS_trolly" 8 36 125 -1

*cabin

cabn 0 0 wdth hght

cabp -10

cabw 10




* LEFT CALL BUTTON

new: simp 3 12 50205 "moe_C2toDS_lifts" 2 5 1999

attr 4

bhvr 3


setv ov00 5

cato 2

mvto 4614 48835


* RIGHT CALL BUTTON

new: simp 3 12 50205 "moe_C2toDS_lifts" 2 5 1999

attr 4

bhvr 3

setv ov00 -5

cato 2

mvto 5920 48348




**Call Button scripts
scrp 3 12 50205 1

	inst

	stim writ from 96 1

*	enum 3 12 50205
*		doif pose = 1
**			stop
*		endi
*	next

	doif pose = 0
		lock
		sndc "ding"
		pose 1
		wait 2
		unlk
	endi

	inst

** light up, light up
*	rtar 3 1 50205
*	doif ov00 eq mv00
*		targ ownr
*		pose 1
*	endi

*don't do any of this unless a creature clicked you
*(maybe let hand queue up stops too, like they can for elevators?)
	doif crea from eq 1

*		pose 1

*ov02 on the other button? you've been pressed by a creature!
*
*		enum 3 12 50205
*			doif targ <> ownr
*				setv ov02 1
*			endi
*		next

		targ from

		sets va48 gtos 0
* check for any existing queue object
		enum 3 13 50205
			doif ov01 eq va48
				addv va49 1
			endi
		next
* make a queue object if there's not one already
		doif va49 eq 0
			new: simp 3 13 50205 "blnk" 1 0 0
*dbg: outs "making queue"
			setv ov00 mv00
			sets ov01 va48
			tick 20
		endi

		stim writ from 75 1

		urge writ from 0 0.5 0 0.5
	endi

*call script on trolly
	rtar 3 1 50205
	mesg wrt+ targ 0 ownr 0 0

endm
**Call Button scripts
*base off script 1
scrp 3 12 50205 2
	inst

	stim writ from 96 1

*	enum 3 12 50205
*		doif pose = 1
**			stop
*		endi
*	next

	doif pose = 0
		lock
		sndc "ding"
		pose 1
		wait 2
		unlk
	endi

	inst

** light up, light up
*	rtar 3 1 50205
*	doif ov00 eq mv00
*		targ ownr
*		pose 1
*	endi

*don't do any of this unless a creature clicked you
*(maybe let hand queue up stops too, like they can for elevators?)
	doif crea from eq 1

*		pose 1

*ov02 on the other button? you've been pressed by a creature!
*
*		enum 3 12 50205
*			doif targ <> ownr
*				setv ov02 1
*			endi
*		next

		targ from

		sets va48 gtos 0
* check for any existing queue object
		enum 3 13 50205
			doif ov01 eq va48
				addv va49 1
			endi
		next
* make a queue object if there's not one already
		doif va49 eq 0
			new: simp 3 13 50205 "blnk" 1 0 0
*dbg: outs "making queue"
			setv ov00 mv00
			sets ov01 va48
			tick 20
		endi

		stim writ from 75 1

		urge writ from 0 0.5 0 0.5
	endi

*call script on trolly
	rtar 3 1 50205
	mesg wrt+ targ 0 ownr 0 0
endm


scrp 3 13 50205 9
	inst
* Just here to continue injecting wait
	doif ooww ov01 eq 3
		targ mtoc ov01
		doif targ ne null
			doif carr eq null
				stim writ from 75 1
			else
* Picked up, stop queueing
				stim writ targ 96 0
				driv 19 -1.0
				kill ownr
			endi
		else
			kill ownr
		endi
	else
		kill ownr
	endi
endm


***trolley has been called!!!****

**For later
scrp 3 1 50205 1
*
*	stim writ from 96 1

*	stim writ from 75 1
	doif velx eq 0
		doif posl gt 4530
* go left - will setv ov00 -5

			mesg wrt+ ownr 1001 _p1_ 0 0

		else
* go right - will setv ov00 5

			mesg wrt+ ownr 1002 _p1_ 0 0

		endi
	endi
endm



scrp 3 1 50205 1001
	lock
	tick 1



	setv ov00 -5



*setv ov01 1.9

	setv ov01 1.77



	part 1

	pose 1



	part 2

	pose 0


*only set gearstick pose when it's actually moving
*	part 3

*	pose 1


	doif velx eq 0
		inst
* Get the queued creatures
		enum 3 13 50205
			doif targ ne null
				doif ov00 eq -5
					doif ooww ov01 eq 3
						tick 0
* spas takes some time to work, so loop
* and keep checking if you got a creature
* before continuing
						setv va00 0
						loop

*if you can't pick up the creature, make them face forward so they have a narrow hitbox
							addv va00 1
							doif va00 > 5
								seta va01 targ
								targ mtoc ov01
*								zomb 1
								dirn 1
*								wait 1
*								zomb 0
								targ va01
							endi

							spas ownr mtoc ov01
							wait 1
							addv va46 1
							seta va45 targ
							targ ownr
							epas 4 0 0
								addv va44 1
							next
							targ va45
						untl va44 gt 0 or ooww ov01 ne 3 or va00 > 15
						kill targ
					else
						kill targ
					endi
				endi
			endi
		next
		slow


**light up appropriate button
*		doif type _p1_ = 3
*			targ _p1_
*			pose 1
*		endi

	endi

	unlk
endm



scrp 3 1 50205 1002
	lock
	tick 1



	setv ov00 5



*setv ov01 -1.9

	setv ov01 -1.77



	part 2

	pose 1



	part 1

	pose 0


*only set gearstick pose when it's actually moving
*	part 3

*	pose 2


	doif velx eq 0
		inst
* Get the queued creatures
		enum 3 13 50205
			doif targ ne null
				doif ov00 eq 5
					doif ooww ov01 eq 3
						tick 0
* spas takes some time to work, so loop
* and keep checking if you got a creature
* before continuing
						setv va00 0
						loop

*if you can't pick up the creature, make them face forward so they have a narrow hitbox
							addv va00 1
							doif va00 > 5
								seta va01 targ
								targ mtoc ov01
*								zomb 1
								dirn 1
*								wait 1
*								zomb 0
								targ va01
							endi

							spas ownr mtoc ov01
							wait 1
							addv va46 1
							seta va45 targ
							targ ownr
							epas 4 0 0
								addv va44 1
							next
							targ va45
						untl va44 gt 0 or ooww ov01 ne 3 or va00 > 15
						kill targ
					else
						kill targ
					endi
				endi
			endi
		next
		slow

**light up appropriate button
*		doif type _p1_ = 3
*			targ _p1_
*			pose 1
*		endi

	endi

	unlk
endm


*Trolly Timer
scrp 3 1 50205 9
	lock
	doif ov00 lt 0
		inst
		epas 4 0 0
			stim writ from 96 0
			stim writ from 75 1
		next

		slow


		doif posl gt 4520

*play lift sound if you're not already playing it
			doif ov99 = 0
				sndl "m_a3"
				setv ov99 1
			endi

*set gearstick pose
			part 3
			pose 1

**light up whichever button you're heading towards
			enum 3 12 50205
				doif ov00 <> mv00
					pose 1
				else
**if a creature pressed it, it stays lit up because of the queue
*					doif ov02 <> 1
					pose 0
*					endi
				endi
			next

			velo ov00 ov01

		else
			inst

*stop playing lift sound
			stpc
			setv ov99 0

			velo 0 0

*			setv ov00 0

			tick 0

			part 1

			pose 0

			part 3

			pose 0
			epas 4 0 0
				driv 19 -1.0
			next
			dpas 4 0 0

*because we can't be exactly sure where the trolly will stop, manually move it 1px at a time until it's meant to end up
			loop
				doif posl > 4498
					mvby -1.0 0
				endi

				doif posl < 4498
					mvby 1.0 0
				endi

				doif post > 48725
					mvby 0 -0.5
				endi

				doif post < 48725
					mvby 0 0.5
				endi
				wait 1
			untl posl > 4497 and posl < 4499 and post > 48724 and post < 48726
			unlk

			mvto 4498 48725

*unlight all buttons now we're done moving
			enum 3 12 50205
*				doif ov00 <> mv00
				pose 0
*				endi
			next

*reset direction var now we're done
			setv ov00 0

			doif totl 3 13 50205 gt 0
				mesg writ ownr 0
			endi
		endi
		unlk

	elif ov00 gt 0
		inst
		epas 4 0 0
			stim writ from 96 0
			stim writ from 75 1
		next


		slow

**slow movement as we get close to our destination

		doif posl lt 5784

*play lift sound if you're not already playing it
			doif ov99 = 0
				sndl "m_a3"
				setv ov99 1
			endi

*set gearstick pose
			part 3
			pose 2

**light up whichever button you're heading towards
			enum 3 12 50205
				doif ov00 <> mv00
					pose 1
				else
**if a creature pressed it, it stays lit up because of the queue
*					doif ov02 <> 1
					pose 0
*					endi
				endi
			next

			velo ov00 ov01

		else
			inst

*stop playing lift sound
			stpc
			setv ov99 0

			velo 0 0

*			setv ov00 0

			tick 0

			part 2

			pose 0

			part 3

			pose 0
			epas 4 0 0
				driv 19 -1.0
			next
			dpas 4 0 0

*because we can't be exactly sure where the trolly will stop, manually move it 1px at a time until it's meant to end up
			loop
				doif posl > 5810
					mvby -1.0 0
				endi

				doif posl < 5810
					mvby 1.0 0
				endi

				doif post > 48257
					mvby 0 -0.5
				endi

				doif post < 48257
					mvby 0 0.5
				endi
				wait 1
			untl posl > 5809 and posl < 5811 and post > 48256 and post < 48258
			unlk

			mvto 5810 48257

*turn off whichever stop you just arrived at
			enum 3 12 50205
*				doif ov00 <> mv00
				pose 0
*				endi
			next

*reset direction var now we're done
			setv ov00 0

			doif totl 3 13 50205 gt 0
				mesg writ ownr 0
			endi
		endi
		unlk
	endi
endm


rscr

enum 3 1 50205

	kill targ

next

enum 1 8 50202

	kill targ

next
enum 3 12 50205

	kill targ

next
enum 3 13 50205

	kill targ

next